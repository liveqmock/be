<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brightedu.dao.edu.ChargeAdminMapper">
  <resultMap id="BaseResultMap" type="com.brightedu.model.edu.ChargeAdmin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    <id column="student_id" jdbcType="NUMERIC" property="student_id" />
    <result column="fee_need" jdbcType="NUMERIC" property="fee_need" />
    <result column="derate_id" jdbcType="NUMERIC" property="derate_id" />
    <result column="charge_fee_paid" jdbcType="NUMERIC" property="charge_fee_paid" />
    <result column="refund_id" jdbcType="NUMERIC" property="refund_id" />
    <result column="register_date" jdbcType="TIMESTAMP" property="register_date" />
    <result column="update_date" jdbcType="TIMESTAMP" property="update_date" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    student_id, fee_need, derate_id, charge_fee_paid, refund_id, register_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.brightedu.model.edu.ChargeAdminExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edu.charge_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.brightedu.model.edu.ChargeAdminExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    delete from edu.charge_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.brightedu.model.edu.ChargeAdmin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    insert into edu.charge_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="student_id != null">
        student_id,
      </if>
      <if test="fee_need != null">
        fee_need,
      </if>
      <if test="derate_id != null">
        derate_id,
      </if>
      <if test="charge_fee_paid != null">
        charge_fee_paid,
      </if>
      <if test="refund_id != null">
        refund_id,
      </if>
      <if test="register_date != null">
        register_date,
      </if>
      <if test="update_date != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="student_id != null">
        #{student_id,jdbcType=NUMERIC},
      </if>
      <if test="fee_need != null">
        #{fee_need,jdbcType=NUMERIC},
      </if>
      <if test="derate_id != null">
        #{derate_id,jdbcType=NUMERIC},
      </if>
      <if test="charge_fee_paid != null">
        #{charge_fee_paid,jdbcType=NUMERIC},
      </if>
      <if test="refund_id != null">
        #{refund_id,jdbcType=NUMERIC},
      </if>
      <if test="register_date != null">
        #{register_date,jdbcType=TIMESTAMP},
      </if>
      <if test="update_date != null">
        #{update_date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.brightedu.model.edu.ChargeAdminExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    select count(*) from edu.charge_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    update edu.charge_admin
    <set>
      <if test="record.student_id != null">
        student_id = #{record.student_id,jdbcType=NUMERIC},
      </if>
      <if test="record.fee_need != null">
        fee_need = #{record.fee_need,jdbcType=NUMERIC},
      </if>
      <if test="record.derate_id != null">
        derate_id = #{record.derate_id,jdbcType=NUMERIC},
      </if>
      <if test="record.charge_fee_paid != null">
        charge_fee_paid = #{record.charge_fee_paid,jdbcType=NUMERIC},
      </if>
      <if test="record.refund_id != null">
        refund_id = #{record.refund_id,jdbcType=NUMERIC},
      </if>
      <if test="record.register_date != null">
        register_date = #{record.register_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_date != null">
        update_date = #{record.update_date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    update edu.charge_admin
    set student_id = #{record.student_id,jdbcType=NUMERIC},
      fee_need = #{record.fee_need,jdbcType=NUMERIC},
      derate_id = #{record.derate_id,jdbcType=NUMERIC},
      charge_fee_paid = #{record.charge_fee_paid,jdbcType=NUMERIC},
      refund_id = #{record.refund_id,jdbcType=NUMERIC},
      register_date = #{record.register_date,jdbcType=TIMESTAMP},
      update_date = #{record.update_date,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.brightedu.model.edu.ChargeAdmin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 02 16:54:43 CST 2012.
    -->
    update edu.charge_admin
    <set>
      <if test="fee_need != null">
        fee_need = #{fee_need,jdbcType=NUMERIC},
      </if>
      <if test="derate_id != null">
        derate_id = #{derate_id,jdbcType=NUMERIC},
      </if>
      <if test="charge_fee_paid != null">
        charge_fee_paid = #{charge_fee_paid,jdbcType=NUMERIC},
      </if>
      <if test="refund_id != null">
        refund_id = #{refund_id,jdbcType=NUMERIC},
      </if>
      <if test="register_date != null">
        register_date = #{register_date,jdbcType=TIMESTAMP},
      </if>
      <if test="update_date != null">
        update_date = #{update_date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where student_id = #{student_id,jdbcType=NUMERIC}
  </update>
</mapper>