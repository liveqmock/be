package com.brightedu.dao.edu;

import com.brightedu.model.edu.RightsFunction;
import com.brightedu.model.edu.RightsFunctionExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface RightsFunctionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    int countByExample(RightsFunctionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    int deleteByExample(RightsFunctionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    @Delete({
        "delete from edu.rights_function",
        "where function_id = #{function_id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String function_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    @Insert({
        "insert into edu.rights_function (function_id, function_name)",
        "values (#{function_id,jdbcType=VARCHAR}, #{function_name,jdbcType=VARCHAR})"
    })
    int insert(RightsFunction record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    int insertSelective(RightsFunction record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    List<RightsFunction> selectByExample(RightsFunctionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    @Select({
        "select",
        "function_id, function_name",
        "from edu.rights_function",
        "where function_id = #{function_id,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    RightsFunction selectByPrimaryKey(String function_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    int updateByExampleSelective(@Param("record") RightsFunction record, @Param("example") RightsFunctionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    int updateByExample(@Param("record") RightsFunction record, @Param("example") RightsFunctionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    int updateByPrimaryKeySelective(RightsFunction record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.rights_function
     *
     * @mbggenerated Fri Feb 17 17:28:53 CST 2012
     */
    @Update({
        "update edu.rights_function",
        "set function_name = #{function_name,jdbcType=VARCHAR}",
        "where function_id = #{function_id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(RightsFunction record);
}