package com.brightedu.dao.edu;

import com.brightedu.model.edu.Messages;
import com.brightedu.model.edu.MessagesExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface MessagesMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    int countByExample(MessagesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    int deleteByExample(MessagesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    @Delete({
        "delete from edu.messages",
        "where message_id = #{message_id,jdbcType=NUMERIC}"
    })
    int deleteByPrimaryKey(Long message_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    @Insert({
        "insert into edu.messages (message_id, from_user, ",
        "to_user, message, ",
        "is_read, receive_tstp, ",
        "read_tstp)",
        "values (#{message_id,jdbcType=NUMERIC}, #{from_user,jdbcType=NUMERIC}, ",
        "#{to_user,jdbcType=NUMERIC}, #{message,jdbcType=VARCHAR}, ",
        "#{is_read,jdbcType=BIT}, #{receive_tstp,jdbcType=TIMESTAMP}, ",
        "#{read_tstp,jdbcType=TIMESTAMP})"
    })
    int insert(Messages record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    int insertSelective(Messages record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    List<Messages> selectByExample(MessagesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    @Select({
        "select",
        "message_id, from_user, to_user, message, is_read, receive_tstp, read_tstp",
        "from edu.messages",
        "where message_id = #{message_id,jdbcType=NUMERIC}"
    })
    @ResultMap("BaseResultMap")
    Messages selectByPrimaryKey(Long message_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    int updateByExampleSelective(@Param("record") Messages record, @Param("example") MessagesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    int updateByExample(@Param("record") Messages record, @Param("example") MessagesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    int updateByPrimaryKeySelective(Messages record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.messages
     *
     * @mbggenerated Tue Feb 28 14:45:50 CST 2012
     */
    @Update({
        "update edu.messages",
        "set from_user = #{from_user,jdbcType=NUMERIC},",
          "to_user = #{to_user,jdbcType=NUMERIC},",
          "message = #{message,jdbcType=VARCHAR},",
          "is_read = #{is_read,jdbcType=BIT},",
          "receive_tstp = #{receive_tstp,jdbcType=TIMESTAMP},",
          "read_tstp = #{read_tstp,jdbcType=TIMESTAMP}",
        "where message_id = #{message_id,jdbcType=NUMERIC}"
    })
    int updateByPrimaryKey(Messages record);
}