package com.brightedu.dao.edu;

import com.brightedu.model.edu.BankOrder;
import com.brightedu.model.edu.BankOrderExample;
import com.brightedu.model.edu.BankOrderKey;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface BankOrderMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	int countByExample(BankOrderExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	int deleteByExample(BankOrderExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	@Delete({ "delete from edu.bank_order",
			"where order_id = #{order_id,jdbcType=NUMERIC}",
			"and charge_id = #{charge_id,jdbcType=NUMERIC}" })
	int deleteByPrimaryKey(BankOrderKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	@Insert({
			"insert into edu.bank_order (order_id, charge_id, ",
			"is_paid, bank_code, ",
			"remark, register_date, ",
			"user_id)",
			"values (#{order_id,jdbcType=NUMERIC}, #{charge_id,jdbcType=NUMERIC}, ",
			"#{is_paid,jdbcType=BIT}, #{bank_code,jdbcType=VARCHAR}, ",
			"#{remark,jdbcType=VARCHAR}, #{register_date,jdbcType=TIMESTAMP}, ",
			"#{user_id,jdbcType=NUMERIC})" })
	int insert(BankOrder record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	int insertSelective(BankOrder record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	List<BankOrder> selectByExample(BankOrderExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	@Select({
			"select",
			"order_id, charge_id, is_paid, bank_code, remark, register_date, user_id",
			"from edu.bank_order",
			"where order_id = #{order_id,jdbcType=NUMERIC}",
			"and charge_id = #{charge_id,jdbcType=NUMERIC}" })
	@ResultMap("BaseResultMap")
	BankOrder selectByPrimaryKey(BankOrderKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	int updateByExampleSelective(@Param("record") BankOrder record,
			@Param("example") BankOrderExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	int updateByExample(@Param("record") BankOrder record,
			@Param("example") BankOrderExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	int updateByPrimaryKeySelective(BankOrder record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table edu.bank_order
	 * @mbggenerated  Fri Feb 10 12:27:56 CST 2012
	 */
	@Update({ "update edu.bank_order",
			"set is_paid = #{is_paid,jdbcType=BIT},",
			"bank_code = #{bank_code,jdbcType=VARCHAR},",
			"remark = #{remark,jdbcType=VARCHAR},",
			"register_date = #{register_date,jdbcType=TIMESTAMP},",
			"user_id = #{user_id,jdbcType=NUMERIC}",
			"where order_id = #{order_id,jdbcType=NUMERIC}",
			"and charge_id = #{charge_id,jdbcType=NUMERIC}" })
	int updateByPrimaryKey(BankOrder record);
}