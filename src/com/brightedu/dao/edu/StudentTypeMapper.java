package com.brightedu.dao.edu;

import com.brightedu.model.edu.StudentType;
import com.brightedu.model.edu.StudentTypeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface StudentTypeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    int countByExample(StudentTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    int deleteByExample(StudentTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    @Delete({
        "delete from edu.student_type",
        "where student_type_id = #{student_type_id,jdbcType=NUMERIC}"
    })
    int deleteByPrimaryKey(Integer student_type_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    @Insert({
        "insert into edu.student_type (student_type_id, student_type_name)",
        "values (#{student_type_id,jdbcType=NUMERIC}, #{student_type_name,jdbcType=VARCHAR})"
    })
    int insert(StudentType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    int insertSelective(StudentType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    List<StudentType> selectByExample(StudentTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    @Select({
        "select",
        "student_type_id, student_type_name",
        "from edu.student_type",
        "where student_type_id = #{student_type_id,jdbcType=NUMERIC}"
    })
    @ResultMap("BaseResultMap")
    StudentType selectByPrimaryKey(Integer student_type_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    int updateByExampleSelective(@Param("record") StudentType record, @Param("example") StudentTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    int updateByExample(@Param("record") StudentType record, @Param("example") StudentTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    int updateByPrimaryKeySelective(StudentType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_type
     *
     * @mbggenerated Sun Feb 12 12:25:52 CST 2012
     */
    @Update({
        "update edu.student_type",
        "set student_type_name = #{student_type_name,jdbcType=VARCHAR}",
        "where student_type_id = #{student_type_id,jdbcType=NUMERIC}"
    })
    int updateByPrimaryKey(StudentType record);
}