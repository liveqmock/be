package com.brightedu.dao.edu;

import com.brightedu.model.edu.StudentInfo;
import com.brightedu.model.edu.StudentInfoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface StudentInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    int countByExample(StudentInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    int deleteByExample(StudentInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    @Delete({
        "delete from edu.student_info",
        "where student_id = #{student_id,jdbcType=NUMERIC}"
    })
    int deleteByPrimaryKey(Integer student_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    @Insert({
        "insert into edu.student_info (student_id, student_name, ",
        "identity_card, exam_num, ",
        "student_address, student_phone, ",
        "student_linkman, linkman_phone, ",
        "student_college_id, college_owner, ",
        "batch_owner, classified_owner, ",
        "subject_owner, agent_owner, ",
        "register_date, update_date, ",
        "student_photo)",
        "values (#{student_id,jdbcType=NUMERIC}, #{student_name,jdbcType=VARCHAR}, ",
        "#{identity_card,jdbcType=VARCHAR}, #{exam_num,jdbcType=VARCHAR}, ",
        "#{student_address,jdbcType=VARCHAR}, #{student_phone,jdbcType=VARCHAR}, ",
        "#{student_linkman,jdbcType=VARCHAR}, #{linkman_phone,jdbcType=VARCHAR}, ",
        "#{student_college_id,jdbcType=VARCHAR}, #{college_owner,jdbcType=NUMERIC}, ",
        "#{batch_owner,jdbcType=NUMERIC}, #{classified_owner,jdbcType=NUMERIC}, ",
        "#{subject_owner,jdbcType=NUMERIC}, #{agent_owner,jdbcType=NUMERIC}, ",
        "#{register_date,jdbcType=TIMESTAMP}, #{update_date,jdbcType=TIMESTAMP}, ",
        "#{student_photo,jdbcType=BINARY})"
    })
    int insert(StudentInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    int insertSelective(StudentInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    List<StudentInfo> selectByExampleWithBLOBs(StudentInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    List<StudentInfo> selectByExample(StudentInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    @Select({
        "select",
        "student_id, student_name, identity_card, exam_num, student_address, student_phone, ",
        "student_linkman, linkman_phone, student_college_id, college_owner, batch_owner, ",
        "classified_owner, subject_owner, agent_owner, register_date, update_date, student_photo",
        "from edu.student_info",
        "where student_id = #{student_id,jdbcType=NUMERIC}"
    })
    @ResultMap("ResultMapWithBLOBs")
    StudentInfo selectByPrimaryKey(Integer student_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    int updateByExampleSelective(@Param("record") StudentInfo record, @Param("example") StudentInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    int updateByExampleWithBLOBs(@Param("record") StudentInfo record, @Param("example") StudentInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    int updateByExample(@Param("record") StudentInfo record, @Param("example") StudentInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    int updateByPrimaryKeySelective(StudentInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    @Update({
        "update edu.student_info",
        "set student_name = #{student_name,jdbcType=VARCHAR},",
          "identity_card = #{identity_card,jdbcType=VARCHAR},",
          "exam_num = #{exam_num,jdbcType=VARCHAR},",
          "student_address = #{student_address,jdbcType=VARCHAR},",
          "student_phone = #{student_phone,jdbcType=VARCHAR},",
          "student_linkman = #{student_linkman,jdbcType=VARCHAR},",
          "linkman_phone = #{linkman_phone,jdbcType=VARCHAR},",
          "student_college_id = #{student_college_id,jdbcType=VARCHAR},",
          "college_owner = #{college_owner,jdbcType=NUMERIC},",
          "batch_owner = #{batch_owner,jdbcType=NUMERIC},",
          "classified_owner = #{classified_owner,jdbcType=NUMERIC},",
          "subject_owner = #{subject_owner,jdbcType=NUMERIC},",
          "agent_owner = #{agent_owner,jdbcType=NUMERIC},",
          "register_date = #{register_date,jdbcType=TIMESTAMP},",
          "update_date = #{update_date,jdbcType=TIMESTAMP},",
          "student_photo = #{student_photo,jdbcType=BINARY}",
        "where student_id = #{student_id,jdbcType=NUMERIC}"
    })
    int updateByPrimaryKeyWithBLOBs(StudentInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table edu.student_info
     *
     * @mbggenerated Sun Jan 15 18:52:28 CST 2012
     */
    @Update({
        "update edu.student_info",
        "set student_name = #{student_name,jdbcType=VARCHAR},",
          "identity_card = #{identity_card,jdbcType=VARCHAR},",
          "exam_num = #{exam_num,jdbcType=VARCHAR},",
          "student_address = #{student_address,jdbcType=VARCHAR},",
          "student_phone = #{student_phone,jdbcType=VARCHAR},",
          "student_linkman = #{student_linkman,jdbcType=VARCHAR},",
          "linkman_phone = #{linkman_phone,jdbcType=VARCHAR},",
          "student_college_id = #{student_college_id,jdbcType=VARCHAR},",
          "college_owner = #{college_owner,jdbcType=NUMERIC},",
          "batch_owner = #{batch_owner,jdbcType=NUMERIC},",
          "classified_owner = #{classified_owner,jdbcType=NUMERIC},",
          "subject_owner = #{subject_owner,jdbcType=NUMERIC},",
          "agent_owner = #{agent_owner,jdbcType=NUMERIC},",
          "register_date = #{register_date,jdbcType=TIMESTAMP},",
          "update_date = #{update_date,jdbcType=TIMESTAMP}",
        "where student_id = #{student_id,jdbcType=NUMERIC}"
    })
    int updateByPrimaryKey(StudentInfo record);
}